NAME = minishell
LIBFT = libft_all/libft_printf_gnl.a
CC = cc
CFLAGS = -Wall -Wextra -Werror -g3
INCLUDES = -I includes
SRCS_DIR = srcs/
OBJS_DIR = obj/

# Regroupement des sources par cat√©gorie
BUILTIN_SRCS = ft_env.c ft_pwd.c ft_echo.c ft_cd.c ft_exit.c find_exec_builting.c ft_export.c ft_unset.c
EXEC_SRCS = here_doc.c exec.c redirection.c execve_utils.c
PARSING_SRCS = token_create.c token_utils.c error_parsing.c split_input.c lexer.c quote_remove.c special_case.c handle_var_env.c handle_var_env_2.c
STRUCT_SRCS = exec_utils.c init_struct.c list_utils.c init_env.c
UTILS_SRCS = free_func.c free_struct.c get_env.c str_utils.c count_line.c
SIGNAL_SRCS = handle_signal.c
MAIN_SRCS = main.c

# Ajout des pr√©fixes de r√©pertoire
SRCS = $(addprefix $(SRCS_DIR)builting/, $(BUILTIN_SRCS)) \
       $(addprefix $(SRCS_DIR)exec/, $(EXEC_SRCS)) \
       $(addprefix $(SRCS_DIR)parsing/, $(PARSING_SRCS)) \
       $(addprefix $(SRCS_DIR)structs/, $(STRUCT_SRCS)) \
       $(addprefix $(SRCS_DIR)utils/, $(UTILS_SRCS)) \
       $(addprefix $(SRCS_DIR)signal/, $(SIGNAL_SRCS)) \
       $(addprefix $(SRCS_DIR)main/, $(MAIN_SRCS))

OBJS = $(patsubst $(SRCS_DIR)%.c,$(OBJS_DIR)%.o,$(SRCS))

# Colors and styles
BLUE = \033[1;34m
GREEN = \033[1;32m
YELLOW = \033[1;33m
RED = \033[1;31m
MAGENTA = \033[1;35m
CYAN = \033[1;36m
BOLD = \033[1m
RESET = \033[0m

# Counter for progress bar
COUNTER = 0
TOTAL_FILES = $(words $(SRCS))
BAR_LENGTH = 50

# Animation frames
FRAMES = ‚†ã ‚†ô ‚†π ‚†∏ ‚†º ‚†¥ ‚†¶ ‚†ß ‚†á ‚†è

.PHONY: all clean fclean re

all: pre_compile $(NAME)

pre_compile:
	@echo "$(MAGENTA)üöÄ Launching Minishell Compilation Sequence üöÄ$(RESET)"
	@for i in 3 2 1; do \
		printf "\r$(YELLOW)Compiling in $$i...$(RESET)"; \
		sleep 1; \
	done
	@printf "\n$(CYAN)Initiating Awesome Compilation Process!$(RESET)\n"
	@sleep 0.5

$(NAME): $(OBJS) $(LIBFT)
	@printf "\n$(GREEN)‚ú® Linking objects with magic sprinkles...$(RESET)\n"
	@$(CC) $(CFLAGS) -o $@ $^ -lreadline
	@echo "$(GREEN)üéâ Compilation completed successfully! üéä$(RESET)"
	@sleep 0.5
	@echo "\n$(RED)$$MINISHELL_LOGO$(RESET)"
	@sleep 0.5
	@echo "$(YELLOW)üåü Minishell is ready to rock! üåü$(RESET)"

# R√®gle modifi√©e pour la compilation des fichiers objets avec barre de progression anim√©e
$(OBJS_DIR)%.o: $(SRCS_DIR)%.c
	@mkdir -p $(@D)
	@$(eval COUNTER=$(shell echo $$(($(COUNTER) + 1))))
	@$(eval PERCENTAGE=$(shell echo $$(($(COUNTER) * 100 / $(TOTAL_FILES)))))
	@$(eval FILLED=$(shell echo $$(($(COUNTER) * $(BAR_LENGTH) / $(TOTAL_FILES)))))
	@$(eval FRAME=$(word $(shell echo $$(($(COUNTER) % 10 + 1))), $(FRAMES)))
	@printf "\r\033[K$(BLUE)$(FRAME) Progress: [%-*s] %3d%%$(RESET)" $(BAR_LENGTH) "$$(printf '%0.s‚ñà' $$(seq 1 $(FILLED)))" $(PERCENTAGE)
	@$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@ 2>/dev/null
	@sleep 0.05

$(LIBFT):
	@$(MAKE) -C libft_all >/dev/null

clean:
	@echo "$(YELLOW)üßπ Cleaning up object files...$(RESET)"
	@$(MAKE) -C libft_all clean >/dev/null
	@rm -rf $(OBJS_DIR)
	@echo "$(GREEN)‚ú® Cleanup complete! Your project is now squeaky clean.$(RESET)"

fclean: clean
	@echo "$(YELLOW)üß® Obliterating the executable...$(RESET)"
	@$(MAKE) -C libft_all fclean >/dev/null
	@rm -f $(NAME)
	@echo "$(GREEN)üí• Complete annihilation achieved! Your slate is wiped clean.$(RESET)"

re: fclean all

# ASCII art logo for MINISHELL with rainbow colors
define MINISHELL_LOGO

 ‚ñà‚ñà‚ñà‚ñÑ ‚ñÑ‚ñà‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà  ‚ñà‚ñà‚ñì  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñë ‚ñà‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñì     ‚ñà‚ñà‚ñì    
‚ñì‚ñà‚ñà‚ñí‚ñÄ‚ñà‚ñÄ ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà ‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà    ‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ ‚ñì‚ñà‚ñà‚ñí    ‚ñì‚ñà‚ñà‚ñí    
‚ñì‚ñà‚ñà    ‚ñì‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí‚ñë ‚ñì‚ñà‚ñà‚ñÑ   ‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà   ‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñà‚ñà‚ñë    
‚ñí‚ñà‚ñà    ‚ñí‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñë‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñë  ‚ñí   ‚ñà‚ñà‚ñí‚ñë‚ñì‚ñà ‚ñë‚ñà‚ñà ‚ñí‚ñì‚ñà  ‚ñÑ ‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñà‚ñà‚ñë    
‚ñí‚ñà‚ñà‚ñí   ‚ñë‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñë‚ñì‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí
‚ñë ‚ñí‚ñë   ‚ñë  ‚ñë‚ñë‚ñì  ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí ‚ñë‚ñì  ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë ‚ñí ‚ñë‚ñë‚ñí‚ñë‚ñí‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë ‚ñí‚ñë‚ñì  ‚ñë‚ñë ‚ñí‚ñë‚ñì  ‚ñë
‚ñë  ‚ñë      ‚ñë ‚ñí ‚ñë‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë ‚ñí ‚ñë‚ñë ‚ñë‚ñí  ‚ñë ‚ñë ‚ñí ‚ñë‚ñí‚ñë ‚ñë ‚ñë ‚ñë  ‚ñë‚ñë ‚ñë ‚ñí  ‚ñë‚ñë ‚ñë ‚ñí  ‚ñë
‚ñë      ‚ñë    ‚ñí ‚ñë   ‚ñë   ‚ñë ‚ñë  ‚ñí ‚ñë‚ñë  ‚ñë  ‚ñë   ‚ñë  ‚ñë‚ñë ‚ñë   ‚ñë     ‚ñë ‚ñë     ‚ñë ‚ñë   
       ‚ñë    ‚ñë           ‚ñë  ‚ñë        ‚ñë   ‚ñë  ‚ñë  ‚ñë   ‚ñë  ‚ñë    ‚ñë  ‚ñë    ‚ñë  ‚ñë
                                                                      
endef
export MINISHELL_LOGO